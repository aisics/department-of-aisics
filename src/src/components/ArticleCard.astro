---
import { getTranslation, getCurrentLanguage } from '../utils/i18n';

export interface Props {
  title: string;
  description: string;
  slug: string;
  category: string;
  tags: string[];
  readingTime: number;
  lastModified: string;
}

const { title, description, slug, category, tags, readingTime, lastModified } = Astro.props;

const currentLang = getCurrentLanguage();
const t = (key: string) => getTranslation(currentLang, key);
---

<article 
  class="article-card bg-white border border-gray-200 rounded-xl p-6 hover:shadow-lg hover:border-gray-300 transition-all duration-200 group"
  data-tags={tags.join(' ').toLowerCase()}
>
  <div class="flex items-start justify-between mb-3">
    <span class="inline-block px-3 py-1 text-xs font-medium bg-primary-50 text-primary-700 rounded-full">
      {category}
    </span>
    <time class="text-xs text-gray-500" datetime={lastModified}>
      {new Date(lastModified).toLocaleDateString()}
    </time>
  </div>
  
  <h3 class="text-xl font-semibold text-gray-900 mb-2 group-hover:text-primary-600 transition-colors line-clamp-2">
    <a href={`/article/${slug}`} class="block">
      {title}
    </a>
  </h3>
  
  <p class="text-gray-600 mb-4 line-clamp-3 leading-relaxed">
    {description}
  </p>
  
  <div class="flex items-center justify-between">
    <div class="flex flex-wrap gap-2">
      {tags.slice(0, 3).map(tag => (
        <span key={tag} class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded">
          #{tag}
        </span>
      ))}
      {tags.length > 3 && (
        <span class="inline-block px-2 py-1 text-xs text-gray-400 rounded">
          +{tags.length - 3} more
        </span>
      )}
    </div>
    
    <div class="flex items-center text-xs text-gray-500">
      <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      {readingTime} {t('articles.minRead')}
    </div>
  </div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>