---
import { getTranslation } from '../utils/i18n';

export interface Props {
  articles: any[];
  lang: string;
}

const { articles, lang } = Astro.props;
const t = (key: string) => getTranslation(lang, key);

// Group articles by category
const articlesByCategory = articles.reduce((acc, article) => {
  if (!acc[article.category]) {
    acc[article.category] = [];
  }
  acc[article.category].push(article);
  return acc;
}, {} as Record<string, any[]>);
---

<div class="max-w-7xl mx-auto px-6 py-16 relative">
  <!-- Background Elements -->
  <div class="absolute top-0 left-0 w-96 h-96 bg-gradient-to-r from-primary-200/30 to-secondary-200/30 rounded-full blur-3xl -translate-x-1/2 -translate-y-1/2"></div>
  <div class="absolute bottom-0 right-0 w-80 h-80 bg-gradient-to-r from-secondary-200/30 to-accent-200/30 rounded-full blur-2xl translate-x-1/2 translate-y-1/2"></div>
  
  <div class="relative z-10">
    {Object.entries(articlesByCategory).map(([category, categoryArticles], sectionIndex) => (
      <section class="mb-20 animate-fade-in-up" style={`animation-delay: ${sectionIndex * 0.2}s;`}>
        <!-- Category Header -->
        <div class="flex items-center mb-12">
          <div class="flex-1">
            <h2 class="text-4xl md:text-5xl font-black text-neural-900 mb-2">
              <span class="bg-gradient-to-r from-neural-900 via-primary-700 to-secondary-700 bg-clip-text text-transparent">
                {category}
              </span>
            </h2>
            <div class="w-24 h-1 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full"></div>
          </div>
          <div class="text-neural-400 font-medium text-lg">
            {categoryArticles.length} {categoryArticles.length === 1 ? 'стаття' : 'статті'}
          </div>
        </div>
        
        <!-- Articles Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
          {categoryArticles.map((article, articleIndex) => (
            <article class="group relative animate-fade-in-up" style={`animation-delay: ${(sectionIndex * 0.2) + (articleIndex * 0.1)}s;`}>
              <!-- Glassmorphism Card -->
              <div class="relative h-full bg-white/90 backdrop-blur-xl rounded-3xl overflow-hidden border border-white/20 shadow-neural hover:shadow-neural-lg transition-all duration-500 hover:scale-[1.02] hover:-translate-y-1">
                <!-- Gradient Background -->
                <div class="absolute inset-0 bg-gradient-to-br from-white via-primary-50/30 to-secondary-50/30 opacity-60"></div>
                
                <!-- Featured Badge -->
                {article.featured && (
                  <div class="absolute top-6 right-6 z-20">
                    <div class="bg-gradient-to-r from-accent-500 to-primary-500 text-white text-xs font-bold px-4 py-2 rounded-full shadow-glow animate-pulse-slow">
                      <div class="flex items-center space-x-1">
                        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                        <span>{lang === 'uk' ? 'Топ' : 'Top'}</span>
                      </div>
                    </div>
                  </div>
                )}
                
                <!-- Content -->
                <a href={`/article/${article.slug}`} class="relative block p-8 h-full">
                  <div class="flex flex-col h-full">
                    <!-- Article Header -->
                    <div class="mb-6">
                      <h3 class="text-2xl font-bold text-neural-900 mb-3 leading-tight group-hover:text-primary-700 transition-colors duration-300 line-clamp-2">
                        {article.title}
                      </h3>
                      <p class="text-neural-600 leading-relaxed line-clamp-3">
                        {article.description}
                      </p>
                    </div>
                    
                    <!-- Article Meta -->
                    <div class="flex-1 flex flex-col justify-end">
                      <div class="flex items-center justify-between text-sm text-neural-500 mb-4">
                        <div class="flex items-center space-x-4">
                          <span class="flex items-center space-x-1">
                            <svg class="w-4 h-4 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="font-medium">{article.readingTime} хв</span>
                          </span>
                          {article.author && (
                            <span class="flex items-center space-x-1">
                              <svg class="w-4 h-4 text-secondary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                              </svg>
                              <span class="font-medium">{article.author}</span>
                            </span>
                          )}
                        </div>
                        <div class="flex items-center space-x-2 text-primary-600 font-semibold group-hover:text-primary-700 transition-colors duration-300">
                          <span class="text-sm">{lang === 'uk' ? 'Читати' : 'Read'}</span>
                          <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                          </svg>
                        </div>
                      </div>
                      
                      <!-- Difficulty Badge -->
                      {article.difficulty && (
                        <div class="mb-4">
                          <span class={`inline-flex items-center px-3 py-1.5 rounded-xl text-xs font-bold transition-all duration-300 ${
                            article.difficulty === 'beginner' ? 'bg-secondary-100 text-secondary-700 shadow-secondary-100/50' :
                            article.difficulty === 'intermediate' ? 'bg-accent-100 text-accent-700 shadow-accent-100/50' :
                            'bg-red-100 text-red-700 shadow-red-100/50'
                          } shadow-lg`}>
                            <div class={`w-2 h-2 rounded-full mr-2 ${
                              article.difficulty === 'beginner' ? 'bg-secondary-500' :
                              article.difficulty === 'intermediate' ? 'bg-accent-500' :
                              'bg-red-500'
                            }`}></div>
                            {article.difficulty === 'beginner' ? (lang === 'uk' ? 'Початківець' : 'Beginner') :
                             article.difficulty === 'intermediate' ? (lang === 'uk' ? 'Середній' : 'Intermediate') :
                             (lang === 'uk' ? 'Просунутий' : 'Advanced')}
                          </span>
                        </div>
                      )}
                      
                      <!-- Tags -->
                      {article.tags.length > 0 && (
                        <div class="flex flex-wrap gap-2">
                          {article.tags.slice(0, 3).map(tag => (
                            <span class="px-3 py-1 bg-gradient-to-r from-neural-100 to-primary-50 text-neural-600 text-xs rounded-full border border-neural-200/50 font-medium">
                              #{tag}
                            </span>
                          ))}
                          {article.tags.length > 3 && (
                            <span class="px-3 py-1 bg-neural-100 text-neural-500 text-xs rounded-full font-medium">
                              +{article.tags.length - 3}
                            </span>
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                </a>
                
                <!-- Hover Glow Effect -->
                <div class="absolute inset-0 bg-gradient-to-r from-primary-500/0 to-secondary-500/0 group-hover:from-primary-500/5 group-hover:to-secondary-500/5 transition-all duration-500 rounded-3xl pointer-events-none"></div>
              </div>
            </article>
          ))}
        </div>
      </section>
    ))}
    
    {articles.length === 0 && (
      <div class="text-center py-20">
        <!-- Empty State -->
        <div class="bg-white/90 backdrop-blur-xl rounded-3xl p-12 max-w-md mx-auto border border-white/20 shadow-neural">
          <div class="w-24 h-24 bg-gradient-to-r from-neural-100 to-primary-100 rounded-full flex items-center justify-center mx-auto mb-8">
            <svg class="w-12 h-12 text-neural-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-neural-800 mb-4">
            {lang === 'uk' ? 'Поки що порожньо' : 'No articles yet'}
          </h3>
          <p class="text-neural-600 leading-relaxed">
            {lang === 'uk' 
              ? 'Скоро тут з\'являться цікаві статті про штучний інтелект!' 
              : 'Interesting AI articles will appear here soon!'}
          </p>
        </div>
      </div>
    )}
  </div>
</div>