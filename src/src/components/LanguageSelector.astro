---
import { getCurrentLanguage } from '../utils/i18n';

const currentLang = getCurrentLanguage();
---

<div class="relative">
  <button 
    id="language-selector"
    class="flex items-center space-x-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900 transition-colors"
    aria-label="Select language"
  >
    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
    </svg>
    <span id="current-lang">UK</span>
    <svg class="w-3 h-3 transition-transform" id="chevron" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>
  
  <div 
    id="language-dropdown"
    class="absolute right-0 mt-2 w-32 bg-white border border-gray-200 rounded-lg shadow-lg z-50 hidden"
  >
    <button 
      class="w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 transition-colors language-option"
      data-lang="uk"
    >
      🇺🇦 Українська
    </button>
    <button 
      class="w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-50 transition-colors language-option"
      data-lang="en"
    >
      🇺🇸 English
    </button>
  </div>
</div>

<script>
  import { setLanguage, getCurrentLanguage } from '../utils/i18n';
  
  document.addEventListener('DOMContentLoaded', () => {
    const selector = document.getElementById('language-selector');
    const dropdown = document.getElementById('language-dropdown');
    const chevron = document.getElementById('chevron');
    const currentLangSpan = document.getElementById('current-lang');
    const languageOptions = document.querySelectorAll('.language-option');
    
    // Set initial language display
    const currentLang = getCurrentLanguage();
    if (currentLangSpan) {
      currentLangSpan.textContent = currentLang.toUpperCase();
    }
    
    // Toggle dropdown
    selector?.addEventListener('click', (e) => {
      e.stopPropagation();
      dropdown?.classList.toggle('hidden');
      chevron?.classList.toggle('rotate-180');
    });
    
    // Close dropdown when clicking outside
    document.addEventListener('click', () => {
      dropdown?.classList.add('hidden');
      chevron?.classList.remove('rotate-180');
    });
    
    // Handle language selection
    languageOptions.forEach(option => {
      option.addEventListener('click', (e) => {
        const lang = (e.target as HTMLElement).getAttribute('data-lang');
        if (lang) {
          setLanguage(lang);
        }
      });
    });
  });
</script>
</div>