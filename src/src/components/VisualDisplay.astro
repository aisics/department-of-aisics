---
export interface Props {
  title?: string;
  type?: 'chart' | 'diagram' | 'progress' | 'comparison';
}

const { title, type = 'chart' } = Astro.props;

// Process slot content to wrap emojis in spans
const slotContent = await Astro.slots.render('default');
const emojiRegex = /(\p{Emoji_Presentation}|\p{Emoji}\uFE0F)/gu;
const processedContent = slotContent.replace(emojiRegex, '<span class="emoji">$1</span>');
---

<div class="visual-display">
  {title && <h4 class="visual-title">{title}</h4>}
  <div class={`visual-content visual-${type}`} set:html={processedContent} />
</div>

<style>
  .visual-display {
    margin: 2rem 0;
    padding: 1.5rem;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    border-radius: 12px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .visual-title {
    margin-bottom: 1rem;
    font-size: 1.1rem;
    font-weight: 600;
    color: #2d3748;
  }

  .visual-content {
    font-family: 'Courier New', monospace;
    font-size: 1.1rem;
    line-height: 2;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 8px;
    overflow-x: auto;
    white-space: pre;
  }

  /* Make emojis bigger but proportional */
  .visual-content :global(.emoji) {
    font-size: 2em;
    display: inline-block;
    vertical-align: middle;
    line-height: 1;
  }

  .visual-chart {
    border-left: 3px solid #4299e1;
  }

  .visual-diagram {
    border-left: 3px solid #48bb78;
    text-align: center;
  }

  .visual-progress {
    border-left: 3px solid #ed8936;
  }

  .visual-comparison {
    border-left: 3px solid #9f7aea;
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .visual-display {
      background: linear-gradient(135deg, #2d3748 0%, #1a202c 100%);
    }

    .visual-title {
      color: #e2e8f0;
    }

    .visual-content {
      background: rgba(45, 55, 72, 0.9);
      color: #e2e8f0;
    }
  }
</style>