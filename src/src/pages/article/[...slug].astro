---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import { getCollection } from 'astro:content';
import { getCategories } from '../../utils/articles';
import { getTranslation } from '../../utils/i18n';

// Generate static paths for all articles
export async function getStaticPaths() {
  const articles = await getCollection('articles');
  
  return articles.map(article => {
    const slug = `${article.data.category.toLowerCase().replace(' ', '-')}-${article.id.includes('/en/') ? 'en' : 'uk'}-${article.slug.split('/').pop().replace('.md', '')}`;
    return {
      params: { slug },
      props: { article }
    };
  });
}

// Get the article from props
const { article } = Astro.props;
const { slug } = Astro.params;

// If article not found, return 404
if (!article) {
  return Astro.redirect('/404');
}

const { Content } = await article.render();

// Get language from article (cookies don't work in static mode)
const articleLang = article.id.includes('/en/') ? 'en' : 'uk';
const lang = articleLang;
const t = (key: string) => getTranslation(lang, key);

// Get categories for sidebar
const categoriesFromRepo = getCategories();
---

<Layout title={`${article.data.title} - ${t('site.title')}`}>
  <Header />
  
  <div class="lg:flex min-h-screen">
    <Sidebar 
      categories={{}} 
      repoCategories={categoriesFromRepo} 
      currentPath={`/article/${Astro.params.slug}`}
      currentSlug={Astro.params.slug}
      currentCategory={article.data.category}
    />
    
    <main class="lg:flex-1 relative overflow-hidden">
      <!-- Background Elements -->
      <div class="absolute inset-0 bg-gradient-to-br from-gray-50 via-white to-primary-50/30"></div>
      <div class="absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-primary-200/20 to-secondary-200/20 rounded-full blur-3xl"></div>
      <div class="absolute bottom-0 left-0 w-80 h-80 bg-gradient-to-br from-secondary-200/20 to-accent-200/20 rounded-full blur-2xl"></div>
      
      <div class="relative z-10">
        <article class="max-w-5xl mx-auto px-4 sm:px-6 py-8 sm:py-12">
          <!-- Breadcrumb -->
          <nav class="mb-12 animate-fade-in-up">
            <ol class="flex items-center space-x-3 text-sm">
              <li>
                <a href="/" class="flex items-center space-x-2 text-gray-600 hover:text-primary-600 transition-all duration-300 hover:scale-105">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 21l4-4 4 4"></path>
                  </svg>
                  <span class="font-medium">{t('article.home')}</span>
                </a>
              </li>
              <li class="flex items-center text-gray-400">
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-gray-600 font-medium">{t(`CATEGORY_${article.data.category.toUpperCase()}`)}</span>
              </li>
              <li class="flex items-center text-gray-400">
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-primary-700 font-semibold">{article.data.title}</span>
              </li>
            </ol>
          </nav>

          <!-- Article Header -->
          <header class="mb-16 animate-fade-in-up" style="animation-delay: 0.1s;">
            <!-- Title -->
            <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-black mb-8 leading-tight">
              <span class="bg-gradient-to-r from-gray-900 via-primary-700 to-secondary-700 bg-clip-text text-transparent">
                {article.data.title}
              </span>
            </h1>
            
            <!-- Meta Info -->
            <div class="flex flex-wrap items-center gap-4 sm:gap-6 mb-8 text-gray-600">
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-primary-100 to-secondary-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-gray-800">{article.data.author}</p>
                  <p class="text-sm text-gray-500">Автор</p>
                </div>
              </div>
              
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-secondary-100 to-accent-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-secondary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-gray-800">{article.data.readingTime} хвилин</p>
                  <p class="text-sm text-gray-500">Час читання</p>
                </div>
              </div>
              
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-primary-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-gray-800">{article.data.date.toLocaleDateString(lang === 'uk' ? 'uk-UA' : 'en-US')}</p>
                  <p class="text-sm text-gray-500">Дата публікації</p>
                </div>
              </div>
            </div>
            
            <!-- Difficulty & Tags Row -->
            <div class="flex flex-wrap items-center gap-4">
              {article.data.difficulty && (
                <div class="flex items-center space-x-2">
                  <span class="text-sm text-gray-600 font-medium">Рівень:</span>
                  <span class={`inline-flex items-center px-4 py-2 rounded-xl text-sm font-bold transition-all duration-300 shadow-lg ${
                    article.data.difficulty === 'beginner' ? 'bg-secondary-100 text-secondary-700' :
                    article.data.difficulty === 'intermediate' ? 'bg-accent-100 text-accent-700' :
                    'bg-red-100 text-red-700'
                  }`}>
                    <div class={`w-2 h-2 rounded-full mr-2 ${
                      article.data.difficulty === 'beginner' ? 'bg-secondary-500' :
                      article.data.difficulty === 'intermediate' ? 'bg-accent-500' :
                      'bg-red-500'
                    }`}></div>
                    {article.data.difficulty === 'beginner' ? (lang === 'uk' ? 'Початківець' : 'Beginner') :
                     article.data.difficulty === 'intermediate' ? (lang === 'uk' ? 'Середній' : 'Intermediate') :
                     (lang === 'uk' ? 'Просунутий' : 'Advanced')}
                  </span>
                </div>
              )}
              
              <!-- Tags -->
              {article.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  <span class="text-sm text-neural-600 font-medium mr-2">Теги:</span>
                  {article.data.tags.map(tag => (
                    <span class="px-3 py-1.5 bg-gradient-to-r from-gray-100 to-primary-50 text-gray-700 text-sm rounded-full border border-gray-200/50 font-medium hover:shadow-lg hover:scale-105 transition-all duration-300">
                      #{tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </header>

          <!-- Article Content -->
          <div class="animate-fade-in-up" style="animation-delay: 0.2s;">
            <!-- Content Card -->
            <div class="bg-white/80 backdrop-blur-xl rounded-2xl sm:rounded-3xl p-4 sm:p-8 md:p-12 border border-white/20 shadow-xl mb-12">
              <div class="markdown-content">
                <Content />
              </div>
            </div>
          </div>

          <!-- Article Footer -->
          <footer class="animate-fade-in-up" style="animation-delay: 0.3s;">
            <div class="bg-white/60 backdrop-blur-xl rounded-2xl sm:rounded-3xl p-4 sm:p-8 border border-white/20 shadow-lg">
              <div class="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6">
                <div class="text-center sm:text-left">
                  <h3 class="text-xl font-bold text-gray-900 mb-2">Дякуємо за читання!</h3>
                  <p class="text-gray-600">{lang === 'uk' ? 'Сподіваємось, стаття була корисною' : 'Hope this article was helpful'}</p>
                </div>
                <a 
                  href="/" 
                  class="group flex items-center space-x-3 px-6 py-3 bg-gradient-to-r from-primary-500 to-secondary-500 text-white rounded-2xl hover:shadow-glow-lg transition-all duration-300 hover:scale-105 font-semibold"
                >
                  <svg class="w-5 h-5 transform group-hover:-translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                  </svg>
                  <span>{t('article.home')}</span>
                </a>
              </div>
            </div>
          </footer>
        </article>
      </div>
    </main>
  </div>
</Layout>

<style>
  /* Astro-optimized markdown styles */
  .markdown-content {
    @apply max-w-none text-gray-700 leading-relaxed;
  }
  
  .markdown-content :global(h1) {
    @apply text-4xl font-bold mb-8 text-gray-900 border-b border-gray-200 pb-4;
    background: linear-gradient(135deg, #6366f1, #14b8a6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .markdown-content :global(h2) {
    @apply text-3xl font-bold mb-6 mt-12 text-gray-800 border-b border-gray-200 pb-2;
  }
  
  .markdown-content :global(h3) {
    @apply text-2xl font-semibold mb-4 mt-8 text-gray-700;
  }
  
  .markdown-content :global(h4) {
    @apply text-xl font-semibold mb-3 mt-6 text-gray-700;
  }
  
  .markdown-content :global(p) {
    @apply mb-6 leading-relaxed text-gray-600;
  }
  
  .markdown-content :global(a) {
    @apply text-primary-600 hover:text-primary-700 font-medium no-underline transition-colors;
  }
  
  .markdown-content :global(strong) {
    @apply font-semibold text-gray-800;
  }
  
  .markdown-content :global(em) {
    @apply italic text-gray-600;
  }
  
  .markdown-content :global(ul) {
    @apply mb-6 space-y-2 pl-6;
  }
  
  .markdown-content :global(ol) {
    @apply mb-6 space-y-2 pl-6;
  }
  
  .markdown-content :global(li) {
    @apply text-gray-600 leading-relaxed;
  }
  
  .markdown-content :global(ul li) {
    @apply relative;
  }
  
  /* Only add bullets to ul li that are NOT inside ol */
  .markdown-content :global(ul:not(ol ul) > li::before) {
    content: '•';
    @apply absolute -left-4 text-primary-500 font-bold;
  }
  
  /* Remove bullets from ul inside ol (nested lists in numbered lists) */
  .markdown-content :global(ol ul > li::before) {
    content: none !important;
  }
  
  .markdown-content :global(ol li) {
    @apply list-decimal;
  }
  
  /* Style nested ul inside ol differently */
  .markdown-content :global(ol ul) {
    @apply pl-4;
  }
  
  .markdown-content :global(ol ul > li) {
    @apply pl-2;
    list-style-type: none;
  }
  
  .markdown-content :global(blockquote) {
    @apply border-l-4 border-primary-500 bg-primary-50/50 rounded-r-xl p-6 my-8 italic;
  }
  
  .markdown-content :global(blockquote p) {
    @apply mb-0 text-primary-800;
  }
  
  /* Code blocks with Shiki highlighting and copy functionality */
  .markdown-content :global(.code-block-wrapper) {
    @apply relative rounded-2xl my-6 shadow-lg border border-gray-200;
    background: #f8f9fa;
  }
  
  .markdown-content :global(.code-block) {
    @apply p-6 overflow-x-auto rounded-2xl;
    background: #f8f9fa !important;
    margin: 0;
  }
  
  .markdown-content :global(.code-block code) {
    @apply font-mono text-sm leading-relaxed;
    background: transparent !important;
    color: inherit !important;
  }
  
  /* Copy button styling */
  .markdown-content :global(.copy-btn) {
    @apply transition-all duration-200;
  }
  
  .markdown-content :global(.copy-btn:hover) {
    @apply transform scale-105 shadow-md;
  }
  
  .markdown-content :global(.copy-btn.copied) {
    @apply bg-green-50 border-green-200;
  }
  
  /* Inline code */
  .markdown-content :global(code:not(pre code)) {
    @apply bg-gray-100 text-gray-800 px-2 py-1 rounded-lg font-mono text-sm;
  }
  
  /* Tables - Modern Design with Responsive Scroll */
  .markdown-content :global(table) {
    @apply w-full border-collapse my-8 shadow-lg rounded-xl overflow-hidden;
    display: block;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  /* Gradient header with brand colors */
  .markdown-content :global(thead) {
    @apply bg-gradient-to-r from-primary-50 via-primary-100/50 to-secondary-50;
  }

  .markdown-content :global(th) {
    @apply px-6 py-4 text-left font-bold text-primary-900 border-b-2 border-primary-300/50;
    white-space: nowrap;
  }

  /* Table body styling */
  .markdown-content :global(tbody) {
    @apply bg-white;
  }

  /* Zebra striping for better readability */
  .markdown-content :global(tbody tr:nth-child(even)) {
    @apply bg-gray-50/50;
  }

  /* Hover effect for interactivity */
  .markdown-content :global(tbody tr) {
    @apply transition-colors duration-200;
  }

  .markdown-content :global(tbody tr:hover) {
    @apply bg-primary-50/30;
  }

  /* Cell styling with cleaner borders */
  .markdown-content :global(td) {
    @apply px-6 py-4 text-gray-700 border-b border-gray-200;
  }

  /* Remove border from last row */
  .markdown-content :global(tbody tr:last-child td) {
    @apply border-b-0;
  }

  /* First column emphasis (often IDs or labels) */
  .markdown-content :global(tbody td:first-child) {
    @apply font-semibold text-gray-900;
  }

  /* Custom scrollbar styling for tables */
  .markdown-content :global(table)::-webkit-scrollbar {
    height: 8px;
  }

  .markdown-content :global(table)::-webkit-scrollbar-track {
    @apply bg-gray-100 rounded-full;
  }

  .markdown-content :global(table)::-webkit-scrollbar-thumb {
    @apply bg-primary-300 rounded-full;
  }

  .markdown-content :global(table)::-webkit-scrollbar-thumb:hover {
    @apply bg-primary-400;
  }

  /* Responsive table optimization for mobile */
  @media (max-width: 768px) {
    .markdown-content :global(table) {
      font-size: 0.875rem;
    }

    .markdown-content :global(th),
    .markdown-content :global(td) {
      @apply px-3 py-2;
    }
  }
  
  /* Images */
  .markdown-content :global(img) {
    @apply rounded-2xl shadow-lg max-w-full h-auto my-6;
  }
  
  /* Horizontal rule */
  .markdown-content :global(hr) {
    @apply border-0 border-t border-gray-200 my-12;
  }
  
  /* KaTeX Math Styling */
  .markdown-content :global(.katex-display) {
    @apply my-8 overflow-x-auto;
    text-align: center;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border: 1px solid #e2e8f0;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }


  .markdown-content :global(.katex) {
    font-size: 1.1em;
  }

  .markdown-content :global(.katex-display .katex) {
    @apply text-lg;
  }

  /* Math block wrapper with enhanced styling */
  .markdown-content :global(.math-display) {
    @apply bg-gradient-to-r from-primary-50/30 to-secondary-50/30 rounded-xl p-6 my-8 border border-primary-200/30;
  }

  /* Inline math */
  .markdown-content :global(.katex-inline) {
    @apply mx-1;
  }
  
  /* Reset all KaTeX styling to defaults */
  .markdown-content :global(.katex),
  .markdown-content :global(.katex *) {
    color: inherit !important;
    background: transparent !important;
    text-shadow: none !important;
    filter: none !important;
    opacity: 1 !important;
  }
  
  /* Ensure proper rendering of math symbols */
  .markdown-content :global(.katex) {
    font-family: KaTeX_Main, KaTeX_Math, "Times New Roman", serif !important;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  /* Specific fix for relation symbols like ≠ */
  .markdown-content :global(.katex .mrel) {
    color: currentColor !important;
    position: relative !important;
    display: inline-block !important;
  }
  
  /* Matrix visualizations - remove line spacing */
  .markdown-content :global(.matrix-viz) {
    line-height: 1 !important;
    font-size: 1.2rem !important;
    letter-spacing: 0.05em !important;
    font-family: monospace !important;
  }
  
  .markdown-content :global(.matrix-viz code) {
    line-height: 1 !important;
    padding: 0.5rem !important;
  }
  
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.copy-btn');
    
    copyButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const copyText = button.getAttribute('data-copy-text');
        const copyIcon = button.querySelector('.copy-icon');
        const checkIcon = button.querySelector('.check-icon');
        
        if (!copyText) return;
        
        try {
          await navigator.clipboard.writeText(copyText);
          
          // Show success state
          button.classList.add('copied');
          copyIcon?.classList.add('hidden');
          checkIcon?.classList.remove('hidden');
          
          // Reset after 2 seconds
          setTimeout(() => {
            button.classList.remove('copied');
            copyIcon?.classList.remove('hidden');
            checkIcon?.classList.add('hidden');
          }, 2000);
          
        } catch (err) {
          console.error('Failed to copy text: ', err);
          
          // Fallback for older browsers
          const textArea = document.createElement('textarea');
          textArea.value = copyText;
          textArea.style.position = 'fixed';
          textArea.style.left = '-999999px';
          textArea.style.top = '-999999px';
          document.body.appendChild(textArea);
          textArea.focus();
          textArea.select();
          
          try {
            document.execCommand('copy');
            
            // Show success state
            button.classList.add('copied');
            copyIcon?.classList.add('hidden');
            checkIcon?.classList.remove('hidden');
            
            setTimeout(() => {
              button.classList.remove('copied');
              copyIcon?.classList.remove('hidden');
              checkIcon?.classList.add('hidden');
            }, 2000);
          } catch (fallbackErr) {
            console.error('Fallback copy failed: ', fallbackErr);
          }
          
          document.body.removeChild(textArea);
        }
      });
    });
  });
</script>

