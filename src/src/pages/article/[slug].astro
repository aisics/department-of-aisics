---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import { getArticlesForLanguage, getArticleBySlug, getCategories, getCorrespondingSlug } from '../../utils/articles';
import { marked } from 'marked';
import { getTranslation } from '../../utils/i18n';

export async function getStaticPaths() {
  // Get articles for both languages
  const enArticles = getArticlesForLanguage('en');
  const ukArticles = getArticlesForLanguage('uk');
  
  // Create paths for all articles
  const paths = [];
  
  enArticles.forEach(article => {
    paths.push({
      params: { slug: article.slug },
      props: { slug: article.slug, lang: 'en' }
    });
  });
  
  ukArticles.forEach(article => {
    paths.push({
      params: { slug: article.slug },
      props: { slug: article.slug, lang: 'uk' }
    });
  });
  
  return paths;
}

const { slug } = Astro.params;
const lang = Astro.cookies.get('language')?.value || 'uk';
const t = (key: string) => getTranslation(lang, key);

// Get categories for sidebar
const categoriesFromRepo = getCategories();

// Try to get the article content in the requested language
let articleData = await getArticleBySlug(slug, lang);

// If no article found in the requested language, try to find corresponding article in other language
if (!articleData) {
  const correspondingSlug = getCorrespondingSlug(slug, lang);
  if (correspondingSlug && correspondingSlug !== slug) {
    // Redirect to the corresponding article in the correct language
    return Astro.redirect(`/article/${correspondingSlug}`);
  }
  // If no corresponding article found, return 404
  return Astro.redirect('/404');
}

const { metadata, content } = articleData;

// Configure marked for better rendering
marked.setOptions({
  breaks: true,
  gfm: true,
  headerIds: true,
  mangle: false
});

// Render markdown content
const renderedContent = marked(content);
---

<Layout title={`${metadata.title} - ${t('site.title')}`}>
  <Header />
  
  <div class="flex min-h-screen">
    <Sidebar 
      categories={{}} 
      repoCategories={categoriesFromRepo} 
      currentPath={`/article/${slug}`}
      currentSlug={slug}
      currentCategory={metadata.category}
    />
    
    <main class="flex-1 relative overflow-hidden">
      <!-- Background Elements -->
      <div class="absolute inset-0 bg-gradient-to-br from-neural-50 via-white to-primary-50/30"></div>
      <div class="absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-primary-200/20 to-secondary-200/20 rounded-full blur-3xl"></div>
      <div class="absolute bottom-0 left-0 w-80 h-80 bg-gradient-to-br from-secondary-200/20 to-accent-200/20 rounded-full blur-2xl"></div>
      
      <div class="relative z-10">
        <article class="max-w-5xl mx-auto px-6 py-12">
          <!-- Breadcrumb -->
          <nav class="mb-12 animate-fade-in-up">
            <ol class="flex items-center space-x-3 text-sm">
              <li>
                <a href="/" class="flex items-center space-x-2 text-neural-600 hover:text-primary-600 transition-all duration-300 hover:scale-105">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 21l4-4 4 4"></path>
                  </svg>
                  <span class="font-medium">{t('article.home')}</span>
                </a>
              </li>
              <li class="flex items-center text-neural-400">
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-neural-600 font-medium">{metadata.category}</span>
              </li>
              <li class="flex items-center text-neural-400">
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-primary-700 font-semibold">{metadata.title}</span>
              </li>
            </ol>
          </nav>

          <!-- Article Header -->
          <header class="mb-16 animate-fade-in-up" style="animation-delay: 0.1s;">
            <!-- Title -->
            <h1 class="text-5xl md:text-6xl lg:text-7xl font-black mb-8 leading-tight">
              <span class="bg-gradient-to-r from-neural-900 via-primary-700 to-secondary-700 bg-clip-text text-transparent">
                {metadata.title}
              </span>
            </h1>
            
            <!-- Meta Info -->
            <div class="flex flex-wrap items-center gap-6 mb-8 text-neural-600">
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-primary-100 to-secondary-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-neural-800">{metadata.author}</p>
                  <p class="text-sm text-neural-500">Автор</p>
                </div>
              </div>
              
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-secondary-100 to-accent-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-secondary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-neural-800">{metadata.readingTime} хвилин</p>
                  <p class="text-sm text-neural-500">Час читання</p>
                </div>
              </div>
              
              <div class="flex items-center space-x-2">
                <div class="w-10 h-10 bg-gradient-to-br from-accent-100 to-primary-100 rounded-full flex items-center justify-center">
                  <svg class="w-5 h-5 text-accent-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                  </svg>
                </div>
                <div>
                  <p class="font-semibold text-neural-800">{new Date(metadata.date || metadata.lastModified).toLocaleDateString(lang === 'uk' ? 'uk-UA' : 'en-US')}</p>
                  <p class="text-sm text-neural-500">Дата публікації</p>
                </div>
              </div>
            </div>
            
            <!-- Difficulty & Tags Row -->
            <div class="flex flex-wrap items-center gap-4">
              {metadata.difficulty && (
                <div class="flex items-center space-x-2">
                  <span class="text-sm text-neural-600 font-medium">Рівень:</span>
                  <span class={`inline-flex items-center px-4 py-2 rounded-xl text-sm font-bold transition-all duration-300 shadow-lg ${
                    metadata.difficulty === 'beginner' ? 'bg-secondary-100 text-secondary-700' :
                    metadata.difficulty === 'intermediate' ? 'bg-accent-100 text-accent-700' :
                    'bg-red-100 text-red-700'
                  }`}>
                    <div class={`w-2 h-2 rounded-full mr-2 ${
                      metadata.difficulty === 'beginner' ? 'bg-secondary-500' :
                      metadata.difficulty === 'intermediate' ? 'bg-accent-500' :
                      'bg-red-500'
                    }`}></div>
                    {metadata.difficulty === 'beginner' ? (lang === 'uk' ? 'Початківець' : 'Beginner') :
                     metadata.difficulty === 'intermediate' ? (lang === 'uk' ? 'Середній' : 'Intermediate') :
                     (lang === 'uk' ? 'Просунутий' : 'Advanced')}
                  </span>
                </div>
              )}
              
              <!-- Tags -->
              {metadata.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  <span class="text-sm text-neural-600 font-medium mr-2">Теги:</span>
                  {metadata.tags.map(tag => (
                    <span class="px-3 py-1.5 bg-gradient-to-r from-neural-100 to-primary-50 text-neural-700 text-sm rounded-full border border-neural-200/50 font-medium hover:shadow-neural hover:scale-105 transition-all duration-300">
                      #{tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </header>

          <!-- Article Content -->
          <div class="animate-fade-in-up" style="animation-delay: 0.2s;">
            <!-- Content Card -->
            <div class="bg-white/80 backdrop-blur-xl rounded-3xl p-8 md:p-12 border border-white/20 shadow-neural-lg mb-12">
              <div class="prose prose-lg max-w-none
                prose-headings:font-bold prose-headings:text-neural-900
                prose-h1:text-4xl prose-h1:mb-8 prose-h1:bg-gradient-to-r prose-h1:from-primary-600 prose-h1:to-secondary-600 prose-h1:bg-clip-text prose-h1:text-transparent
                prose-h2:text-3xl prose-h2:mb-6 prose-h2:text-neural-800 prose-h2:border-b prose-h2:border-neural-200 prose-h2:pb-2
                prose-h3:text-2xl prose-h3:mb-4 prose-h3:text-neural-700
                prose-p:text-neural-600 prose-p:leading-relaxed prose-p:mb-6
                prose-a:text-primary-600 prose-a:no-underline hover:prose-a:text-primary-700 prose-a:font-medium prose-a:transition-colors
                prose-strong:text-neural-800 prose-strong:font-semibold
                prose-code:bg-gray-100 prose-code:text-gray-800 prose-code:px-2 prose-code:py-1 prose-code:rounded-lg prose-code:font-mono prose-code:text-sm
                prose-pre:bg-gray-100 prose-pre:text-gray-800 prose-pre:rounded-2xl prose-pre:p-6 prose-pre:shadow-lg prose-pre:border prose-pre:border-gray-200
                prose-blockquote:border-l-4 prose-blockquote:border-primary-500 prose-blockquote:bg-primary-50/50 prose-blockquote:rounded-r-xl prose-blockquote:p-6 prose-blockquote:my-8
                prose-ul:text-neural-600 prose-li:mb-2
                prose-img:rounded-2xl prose-img:shadow-neural">
                <Fragment set:html={renderedContent} />
              </div>
            </div>
          </div>

          <!-- Article Footer -->
          <footer class="animate-fade-in-up" style="animation-delay: 0.3s;">
            <div class="bg-white/60 backdrop-blur-xl rounded-3xl p-8 border border-white/20 shadow-neural">
              <div class="flex flex-col sm:flex-row items-center justify-between gap-6">
                <div class="text-center sm:text-left">
                  <h3 class="text-xl font-bold text-neural-900 mb-2">Дякуємо за читання!</h3>
                  <p class="text-neural-600">{lang === 'uk' ? 'Сподіваємось, стаття була корисною' : 'Hope this article was helpful'}</p>
                </div>
                <a 
                  href="/" 
                  class="group flex items-center space-x-3 px-6 py-3 bg-gradient-to-r from-primary-500 to-secondary-500 text-white rounded-2xl hover:shadow-glow-lg transition-all duration-300 hover:scale-105 font-semibold"
                >
                  <svg class="w-5 h-5 transform group-hover:-translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                  </svg>
                  <span>{t('article.home')}</span>
                </a>
              </div>
            </div>
          </footer>
        </article>
      </div>
    </main>
  </div>
</Layout>