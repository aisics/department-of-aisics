---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import { getArticlesForLanguage, getArticleBySlug, getCategories } from '../../utils/articles';
import { marked } from 'marked';
import { getTranslation } from '../../utils/i18n';

export async function getStaticPaths() {
  // Get articles for both languages
  const enArticles = getArticlesForLanguage('en');
  const ukArticles = getArticlesForLanguage('uk');
  
  // Create paths for all articles
  const paths = [];
  
  enArticles.forEach(article => {
    paths.push({
      params: { slug: article.slug },
      props: { slug: article.slug, lang: 'en' }
    });
  });
  
  ukArticles.forEach(article => {
    paths.push({
      params: { slug: article.slug },
      props: { slug: article.slug, lang: 'uk' }
    });
  });
  
  return paths;
}

const { slug } = Astro.params;
const lang = Astro.cookies.get('language')?.value || 'uk';
const t = (key: string) => getTranslation(lang, key);

// Get categories for sidebar
const categoriesFromRepo = getCategories();

// Get the article content
const articleData = await getArticleBySlug(slug, lang);

// If no article found, return 404
if (!articleData) {
  return Astro.redirect('/404');
}

const { metadata, content } = articleData;

// Configure marked for better rendering
marked.setOptions({
  breaks: true,
  gfm: true,
  headerIds: true,
  mangle: false
});

// Render markdown content
const renderedContent = marked(content);
---

<Layout title={`${metadata.title} - ${t('site.title')}`}>
  <Header />
  
  <div class="flex min-h-screen">
    <Sidebar 
      categories={{}} 
      repoCategories={categoriesFromRepo} 
      currentPath={`/article/${slug}`}
      currentSlug={slug}
      currentCategory={metadata.category}
    />
    
    <main class="flex-1 bg-gray-50">
      <article class="max-w-4xl mx-auto px-4 py-8">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-gray-600">
          <li>
            <a href="/" class="hover:text-primary-600 transition-colors">
              {t('article.home')}
            </a>
          </li>
          <li class="flex items-center">
            <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
            <span>{metadata.category}</span>
          </li>
          <li class="flex items-center">
            <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
            <span class="text-gray-900 font-medium">{metadata.title}</span>
          </li>
        </ol>
      </nav>

      <!-- Article Header -->
      <header class="mb-8">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">{metadata.title}</h1>
        <div class="flex flex-wrap items-center text-gray-600 text-sm gap-4 mb-4">
          <span class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            {metadata.author}
          </span>
          <span class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {metadata.readingTime} min read
          </span>
          <span class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {new Date(metadata.date || metadata.lastModified).toLocaleDateString(lang === 'uk' ? 'uk-UA' : 'en-US')}
          </span>
          {metadata.difficulty && (
            <span class={`px-3 py-1 rounded-full text-xs font-medium ${
              metadata.difficulty === 'beginner' ? 'bg-green-100 text-green-800' :
              metadata.difficulty === 'intermediate' ? 'bg-yellow-100 text-yellow-800' :
              'bg-red-100 text-red-800'
            }`}>
              {metadata.difficulty === 'beginner' ? (lang === 'uk' ? 'Початківець' : 'Beginner') :
               metadata.difficulty === 'intermediate' ? (lang === 'uk' ? 'Середній' : 'Intermediate') :
               (lang === 'uk' ? 'Просунутий' : 'Advanced')}
            </span>
          )}
        </div>
        
        <!-- Tags -->
        {metadata.tags.length > 0 && (
          <div class="mt-4 flex flex-wrap gap-2">
            {metadata.tags.map(tag => (
              <span class="px-3 py-1 bg-gray-200 text-gray-700 text-sm rounded-full">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </header>

      <!-- Article Content -->
      <div class="prose prose-lg max-w-none prose-headings:font-bold prose-a:text-primary-600 prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-pre:bg-gray-900 prose-pre:text-gray-100">
        <Fragment set:html={renderedContent} />
      </div>

      <!-- Article Footer -->
      <footer class="mt-12 pt-8 border-t border-gray-200">
        <div class="flex justify-end">
          <a href="/" class="text-primary-600 hover:text-primary-700 font-medium transition-colors">
            ← {t('article.home')}
          </a>
        </div>
      </footer>
    </article>
    </main>
  </div>
</Layout>