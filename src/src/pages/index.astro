---
import { loadTranslations, getLanguageFromCookie } from '../utils/i18n';
await loadTranslations();
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Sidebar from '../components/Sidebar.astro';
import ArticleList from '../components/ArticleList.astro';
import { getCategories, getArticlesForLanguage } from '../utils/articles';
import { getTranslation } from '../utils/i18n';

const lang = Astro.cookies.get('language')?.value || 'uk';
// Get categories from metadata.json
const categoriesFromRepo = getCategories();
// Get articles for current language
const articles = getArticlesForLanguage(lang);

const t = (key: string) => getTranslation(lang, key);
---

<Layout title={`${t('site.title')} - ${t('hero.title')}`}>
  <Header />
  
  <div class="flex min-h-screen">
    <Sidebar 
      categories={{}} 
      repoCategories={categoriesFromRepo} 
    />
    
    <main class="flex-1 relative overflow-hidden">
      <!-- Modern Hero Section -->
      <section class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-neural-950 via-primary-900 to-secondary-900">
        <!-- Animated Background -->
        <div class="absolute inset-0 bg-neural-pattern opacity-30"></div>
        
        <!-- Floating Elements -->
        <div class="absolute top-20 left-20 w-72 h-72 bg-gradient-to-r from-primary-500/20 to-secondary-500/20 rounded-full blur-3xl animate-float"></div>
        <div class="absolute bottom-20 right-20 w-96 h-96 bg-gradient-to-r from-secondary-500/20 to-accent-500/20 rounded-full blur-3xl animate-float" style="animation-delay: -2s;"></div>
        <div class="absolute top-1/2 left-1/3 w-48 h-48 bg-gradient-to-r from-accent-500/20 to-primary-500/20 rounded-full blur-2xl animate-pulse-slow"></div>
        
        <!-- Grid Pattern Overlay -->
        <div class="absolute inset-0 bg-gradient-to-b from-transparent via-neural-900/5 to-neural-900/20"></div>
        
        <!-- Content -->
        <div class="relative z-10 text-center px-6 max-w-6xl mx-auto">
          <!-- Main Title -->
          <h1 class="text-6xl md:text-8xl lg:text-9xl font-black mb-8 leading-tight animate-fade-in-up">
            <span class="block bg-gradient-to-r from-white via-primary-100 to-secondary-100 bg-clip-text text-transparent">
              {t('hero.title')}
            </span>
          </h1>
          
          <!-- Subtitle -->
          <p class="text-xl md:text-2xl lg:text-3xl text-neural-300 max-w-4xl mx-auto leading-relaxed mb-12 animate-fade-in-up font-light" style="animation-delay: 0.2s;">
            {t('hero.description')}
          </p>
          
          <!-- CTA Buttons -->
          <div class="flex flex-col sm:flex-row gap-6 justify-center items-center animate-fade-in-up" style="animation-delay: 0.4s;">
            <a 
              href="#explore" 
              class="group relative px-8 py-4 bg-gradient-to-r from-primary-500 to-secondary-500 text-white font-semibold rounded-2xl overflow-hidden transition-all duration-500 hover:shadow-glow-lg hover:scale-105 transform"
            >
              <div class="absolute inset-0 bg-gradient-to-r from-primary-600 to-secondary-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <div class="relative flex items-center space-x-2">
                <span>{t('cta.startLearning')}</span>
                <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
              </div>
            </a>
            
            <a 
              href="https://github.com/aisics/department-of-aisics" 
              target="_blank"
              class="group px-8 py-4 border-2 border-neural-300/30 text-neural-200 font-semibold rounded-2xl backdrop-blur-sm bg-white/5 hover:bg-white/10 hover:border-primary-400/50 transition-all duration-300 hover:scale-105 transform"
            >
              <div class="flex items-center space-x-2">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                <span>{t('cta.github')}</span>
                <svg class="w-4 h-4 transform group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
              </div>
            </a>
          </div>
          
          <!-- Scroll Indicator -->
          <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
            <svg class="w-6 h-6 text-neural-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
            </svg>
          </div>
        </div>
      </section>

      <!-- Articles Section -->
      <section id="explore" class="relative py-20 bg-gradient-to-b from-neural-50 to-white">
        <!-- Section Header -->
        <div class="max-w-7xl mx-auto px-6 mb-16 text-center">
          <h2 class="text-4xl md:text-5xl font-bold text-neural-900 mb-6 animate-fade-in-up">
            Досліджуйте знання
          </h2>
          <p class="text-xl text-neural-600 max-w-3xl mx-auto animate-fade-in-up" style="animation-delay: 0.1s;">
            Оберіть тему, яка вас цікавить, та почніть свій шлях у світ штучного інтелекту
          </p>
        </div>
        
        <!-- Articles Grid -->
        <div class="animate-fade-in-up" style="animation-delay: 0.2s;">
          <ArticleList articles={articles} lang={lang} />
        </div>
        
        <!-- Background Elements -->
        <div class="absolute top-10 right-10 w-32 h-32 bg-gradient-to-br from-primary-200 to-secondary-200 rounded-full blur-2xl opacity-60"></div>
        <div class="absolute bottom-10 left-10 w-24 h-24 bg-gradient-to-br from-secondary-200 to-accent-200 rounded-full blur-xl opacity-60"></div>
      </section>
    </main>
  </div>

  <!-- Modern pointing indicator (updated) -->
  <div class="fixed left-80 top-1/2 transform -translate-y-1/2 z-40 pointer-events-none">
    <div class="flex items-center animate-pulse-slow">
      <div class="bg-gradient-to-r from-white/95 to-primary-50/95 backdrop-blur-sm rounded-2xl px-6 py-3 shadow-neural border border-white/20">
        <p class="text-sm font-semibold text-neural-800 whitespace-nowrap">{t('nav.chooseJourney')}</p>
      </div>
      <svg class="w-8 h-8 text-primary-500 ml-4 animate-float" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
      </svg>
    </div>
  </div>
</Layout>

<style>
  /* Additional custom animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  /* Scroll behavior */
  html {
    scroll-behavior: smooth;
  }
  
  /* Custom gradient animation */
  .animate-gradient {
    background-size: 400% 400%;
    animation: gradient 8s ease infinite;
  }
</style>

<script>
  // Add intersection observer for scroll animations
  if (typeof window !== 'undefined') {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in-up');
        }
      });
    }, observerOptions);

    // Observe elements when page loads
    document.addEventListener('DOMContentLoaded', () => {
      const elementsToAnimate = document.querySelectorAll('.animate-on-scroll');
      elementsToAnimate.forEach(el => observer.observe(el));
    });
  }
</script>